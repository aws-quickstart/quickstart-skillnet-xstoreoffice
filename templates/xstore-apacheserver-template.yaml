---
AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates EC2 instances on AWS. It deploys Oracle application behind an ELB. 
  **WARNING** This template creates EC2 instances and related resources. You will be billed for the AWS 
  resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Configuration
        Parameters:
        - EnvironmentSize
        - VpcId
        - Subnets
        - SecurityGroups
      - Label:
          default: Amazon EC2 Configuration
        Parameters:
        - KeyPairName
        - StackPrefix
        - IamInstanceProfile
      - Label:
          default: Workload Configuration
        Parameters:
        - PuppetServerIP        
        - ProxyServer
        - SSLCertificateArn
    ParameterLabels:
      EnvironmentSize:
        default: Environment Size
      VpcId:
        default: VPC ID
      Subnets:
        default: Private Subnet ID(s)
      SecurityGroups:
        default: Security Group ID(s)
      KeyPairName:
        default: Key Pair Name
      StackPrefix:
        default: Stack Name Prefix
      PuppetServerIP:
        default: Pupper Server IP Address
      ProxyServer:
        default: Proxy Server URL
      IamInstanceProfile:
        default: IAM Instance Profile
      SSLCertificateArn:
        default: SSL Certificate ARN      
Parameters:
  EnvironmentSize:
    Type: String
    Default: Small
    AllowedValues:
      - Small
      - Medium
      - Large
    Description: Select Environment Size (S,M,L)
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: must be a list of at least two existing subnets associated
      with at least two different availability zones. They should be residing in the
      selected Virtual Private Cloud.
  SecurityGroups:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: The list of SecurityGroupIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: must be the SecurityGroup Ids of an existing Virtual Private Cloud.
  KeyPairName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  StackPrefix:
    Type: String
    MinLength: "1"
    MaxLength: "20"
    AllowedPattern: "[a-zA-Z0-9]*"
    Description: The prefix to all the associated resources in the stack
    Default: XCenter
  PuppetServerIP:
    Type: String
    Default: "10.0.0.38"
  ProxyServer:
    Type: String
    Default: "http://192.168.50.138:3128"
  IamInstanceProfile:
    Type: String
    Default: xstore_ec2_instance
    Description: must be the IAM Instance Profile of an existing Virtual Private Cloud.
  SSLCertificateArn:
    Type: String
    Description: Server certificate ARN of your existing Account and Virtual Private Cloud (VPC)
    ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.    
Mappings:
  RegionMap:
    us-east-1:
      "OEL7AMI" : "ami-0901daa800ec1a6c3" 
  InstanceSize:
    Small:
      "EC2" : "c3.large"
      "MinSize" : "1"
      "MaxSize" : "4"
      "DesireSize" : "1"
      "EbsVolumeSize" : "100"
    Medium:
      "EC2" : "c3.xlarge"
      "MinSize" : "4"
      "MaxSize" : "6"
      "DesireSize" : "4"
      "EbsVolumeSize" : "250"
    Large:
      "EC2" : "c3.2xlarge"
      "MinSize" : "6"
      "MaxSize" : "8"
      "DesireSize" : "6"  
      "EbsVolumeSize" : "500"
Resources:
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      KeyName: !Ref KeyPairName
      InstanceType: !FindInMap [InstanceSize, !Ref EnvironmentSize, EC2]
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", OEL7AMI]
      IamInstanceProfile: !Ref IamInstanceProfile
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !FindInMap [InstanceSize, !Ref EnvironmentSize, EbsVolumeSize]
            VolumeType: "gp2"
      SecurityGroups: 
        Ref: SecurityGroups
      UserData:
        "Fn::Base64":
          !Sub |
            #!/bin/bash
            #sudo su root           
            echo "proxy=${ProxyServer}" >> /etc/yum.conf
            yum -y install ca-certificates
            
            echo "${PuppetServerIP} puppet.skillnetaws.com puppet" >> /etc/hosts
            echo "$(curl http://169.254.169.254/latest/meta-data/local-ipv4) webserver01.skillnetaws.com webserver01" >> /etc/hosts
            
            #Install ntp server
            yum -y install ntp ntpdate
            systemctl start ntpd
            systemctl enable ntpd
            
            #Install puppet agent
            rpm -Uvh -httpproxy "${ProxyServer}"  https://yum.puppetlabs.com/puppet5/puppet5-release-el-7.noarch.rpm
            yum install -y puppet-agent
            
            echo "[main]" >> /etc/puppetlabs/puppet/puppet.conf
            echo "certname = webserver01.skillnetaws.com" >> /etc/puppetlabs/puppet/puppet.conf
            echo "server = puppet.skillnetaws.com" >> /etc/puppetlabs/puppet/puppet.conf
            echo "environment = xcenter_webserver" >> /etc/puppetlabs/puppet/puppet.conf
            echo "runinterval = 1h" >> /etc/puppetlabs/puppet/puppet.conf
            
            #/opt/puppetlabs/bin/puppet agent -t            
  ApacheServerGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
        Ref: Subnets
      LaunchConfigurationName:
        Ref: LaunchConfig
      MinSize: !FindInMap [InstanceSize, !Ref EnvironmentSize, MinSize]
      MaxSize: !FindInMap [InstanceSize, !Ref EnvironmentSize, MaxSize]
      DesiredCapacity: !FindInMap [InstanceSize, !Ref EnvironmentSize, DesireSize]
      Tags:
        -
          Key: Name
          PropagateAtLaunch: true
          Value: !Join [ " - ", [ !Ref StackPrefix, "Apache Server" ] ]
        -
          Key: LCM_TAG
          PropagateAtLaunch: true
          Value: XSTORE          
      TargetGroupARNs:
      - Ref: ALBTargetGroup  
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: apache-alb
      SecurityGroups: 
        Ref: SecurityGroups
      Subnets:
        Ref: Subnets
      Scheme: internal
  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: ALBTargetGroup
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: '443'
      Protocol: HTTPS
      Certificates:
      - CertificateArn: 
          Ref: SSLCertificateArn
  ALBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckProtocol: HTTP
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      Name: apache-alb-targetgroup
      TargetGroupAttributes:
      - Key: stickiness.enabled
        Value: true
      - Key: stickiness.lb_cookie.duration_seconds
        Value: 600
      VpcId:
        Ref: VpcId  
Outputs:
  ELBDNSName:
    Description: ELB DNS Name
    Value:
      Fn::GetAtt:
      - ApplicationLoadBalancer
      - DNSName
